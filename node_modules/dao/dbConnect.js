var mysql=require('mysql');
 
function connectServer(){
  
      var client=mysql.createConnection({
          host:'dbquiz.co3gmgt1vgtz.us-east-1.rds.amazonaws.com',
          user:'dbproject',
          password:'12345678',
          database:'dbquiz'
     })
 
     return client;
 }
 
 
function  selectFun(client,username,callback){
     //client为一个mysql连接对象
     client.query('select * from dbquiz.user_info where username="'+username+'"',function(err,results,fields){
         if(err) throw err;
 
         callback(results);
     });
 }
 
 function insertFun(client , username , password,level,rate,experience,callback){
     client.query('insert into dbquiz.user_info values (?,?,?,?,?)', [username,password,level,rate,experience], function(err,result){
         if( err ){
             console.log( "error:" + err.message);
             return err;
         }
           callback(err);
     });
 }

 function updateFun(client, username,level,rate,callback){
    client.query('UPDATE dbquiz.user_info SET current_level = ? and current_rate = ? where username = ?',[level,rate,"cara"], function(err, result){
          if(err){
            console.log("error:" + err.message);
            return err;
          }
          callback(err);
    });
 }

 function deleteFun(client,username,callback){
    client.query('DELETE FROM dbquiz.user_info where username = "'+username+'"',function(err,result){
             if (err){
                console.log("error:" +err.message);
                return err;
             }
             callback(err);
    });
 }

 function movieSelect(client,genre,lowvotes,highvotes,callback){
       client.query('SELECT M.NAME, M.ID, M.OVERVIEW FROM dbquiz.MOVIE M INNER JOIN dbquiz.MOVIE_GENRE MG ON M.ID = MG.MOVIE_ID WHERE MG.GENRE = "'+genre+'" AND M.VOTES>= "'+lowvotes+'" AND M.VOTES < "'+highvotes+'" ORDER BY RAND() LIMIT 1', function(err,movie){
            if(err) throw err;
            callback(movie);
      });
 }

 function directorSelect(client,movieid,callback){
      client.query('SELECT P.NAME, P.PERSON_ID FROM dbquiz.PERSON P INNER JOIN dbquiz.movie_director md ON P.PERSON_ID = md.directorid WHERE md.movieid ="'+movieid+'"', function(err,director){
             if(err) throw err;
             callback(director);
      });
 }

 function orderSelect(client, movieid, callback){
      client.query('SELECT PERSON_ID, ORD FROM dbquiz.CAST WHERE MOVIE_ID = "'+movieid+'" ORDER BY ORD ASC', function(err, actor){
            if(err) throw err;
            callback(actor);
      });
 }

 function actorSelect(client,actorid,callback){
      client.query('SELECT P.NAME, P.PERSON_ID FROM dbquiz.PERSON P WHERE P.PERSON_ID = "'+actorid+'"',function(err,actor){
            if(err) throw err;
            callback(actor);
      });
 }

 function studioSelect(client,movieid,callback){
     client.query('SELECT s.studioname FROM dbquiz.studio s INNER JOIN dbquiz.MOVIE_STUDIO ms ON ms.STUDIOID = s.id WHERE ms.MOVIEID="'+movieid+'"', function(err, studio){
            if(err) throw err;
            callback(studio);
     });
 }

 function ratingSelect(client,genre,lowvotes,highvotes,rating,callback){
       client.query('SELECT M.NAME, M.ID, M.OVERVIEW FROM dbquiz.MOVIE M INNER JOIN dbquiz.MOVIE_GENRE MG ON M.ID = MG.MOVIE_ID WHERE MG.GENRE = "'+genre+'" AND M.VOTES>= "'+lowvotes+'" AND M.VOTES < "'+highvotes+'" AND M.RATING <"'+rating+'" ORDER BY RAND() LIMIT 1', function(err,movie){
            if(err) throw err;
            callback(movie);
      });
 }

function genreSelect(client,genre,lowvotes,highvotes,callback){
       client.query('SELECT M.NAME, M.ID, M.OVERVIEW FROM dbquiz.MOVIE M INNER JOIN dbquiz.MOVIE_GENRE MG ON M.ID = MG.MOVIE_ID WHERE MG.GENRE = "'+genre+'" AND M.VOTES>= "'+lowvotes+'" AND M.VOTES < "'+highvotes+'" ORDER BY RAND() LIMIT 4', function(err,movie){
            if(err) throw err;
            callback(movie);
      });
 } 


 
 exports.connect = connectServer;
 exports.selectFun  = selectFun;
 exports.insertFun = insertFun;
 exports.movieSelect = movieSelect;
 exports.directorSelect = directorSelect;
 exports.actorSelect = actorSelect;
 exports.studioSelect = studioSelect;
 exports.ratingSelect = ratingSelect;
 exports.updateFun = updateFun;
 exports.genreSelect = genreSelect;
 exports.deleteFun = deleteFun;
 exports.orderSelect = orderSelect;